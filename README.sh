 ЗАДАНИЕ:
* сделать из плохого кода хороший;
* важно сохранить логику появления ошибочных тасков;
* сделать правильную мультипоточность обработки заданий.
приложение эмулирует получение и обработку тасков, пытается и получать и обрабатывать в многопоточном режиме
В конце должно выводить успешные таски и ошибки выполнения остальных тасков

Решение:
в рефакторенге кода использованны примитивы синхронизации wg sync.WaitGroup, 
предотвращение конкурентной записи в карты с помощью sync.Mutex  и 
удаление неиспользуемых конструкций из структуры.